//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1-b171012.0423 
//         See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
//         Any modifications to this file will be lost upon recompilation of the source schema. 
//         Generated on: 2018.10.03 at 12:42:00 PM BST 
//


package ie.gmit.sw.ds;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Country.
 * 
 * <p>The following schema fragment specifies the expected         content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Country"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Ireland"/&gt;
 *     &lt;enumeration value="UK"/&gt;
 *     &lt;enumeration value="US"/&gt;
 *     &lt;enumeration value="France"/&gt;
 *     &lt;enumeration value="Spain"/&gt;
 *     &lt;enumeration value="Italy"/&gt;
 *     &lt;enumeration value="Germany"/&gt;
 *     &lt;enumeration value="Russia"/&gt;
 *     &lt;enumeration value="China"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "Country", namespace = "http://sw.gmit.ie/ds/")
@XmlEnum
public enum Country {

    @XmlEnumValue("Ireland")
    IRELAND("Ireland"),
    UK("UK"),
    US("US"),
    @XmlEnumValue("France")
    FRANCE("France"),
    @XmlEnumValue("Spain")
    SPAIN("Spain"),
    @XmlEnumValue("Italy")
    ITALY("Italy"),
    @XmlEnumValue("Germany")
    GERMANY("Germany"),
    @XmlEnumValue("Russia")
    RUSSIA("Russia"),
    @XmlEnumValue("China")
    CHINA("China");
    private final String value;

    Country(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Country fromValue(String v) {
        for (Country c: Country.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
